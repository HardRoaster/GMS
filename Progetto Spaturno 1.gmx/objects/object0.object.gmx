<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spt_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fixed rotation 
phy_fixed_rotation = true;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move events
/// Move right
var spd = 4;
if (keyboard_check(vk_right)){
    phy_position_x += 4;
    sprite_index = spt_right;
    image_speed = 0.5;
}
if (keyboard_check(vk_right) and keyboard_check(vk_shift)){
    phy_position_x += spd*2;
    sprite_index = spt_right;
    image_speed = 1;
}

/// Move left
if (keyboard_check(vk_left)){
    phy_position_x -= 4;
    sprite_index = spt_left;
    image_speed = 0.5;    
}

if (keyboard_check(vk_left) and keyboard_check(vk_shift)){
    phy_position_x -= spd*2;
    sprite_index = spt_left;
    image_speed = 1;
}

/// Move up
if (keyboard_check(vk_up)){
    phy_position_y -= 4;
    sprite_index = spt_up;
    image_speed = 0.5;
}

if (keyboard_check(vk_up) and keyboard_check(vk_shift)){
    phy_position_y -= spd*2;
    sprite_index = spt_up;
    image_speed = 1;
}

/// Move down
if (keyboard_check(vk_down)){
    phy_position_y += 4;
    sprite_index = spt_down;
    image_speed = 0.5;
}

if (keyboard_check(vk_down) and keyboard_check(vk_shift)){
    phy_position_y += spd*2;
    sprite_index = spt_down;
    image_speed = 1;
}
/// Stop animation
if (!keyboard_check(vk_down) and !keyboard_check(vk_up) and !keyboard_check(vk_right) and !keyboard_check(vk_left)){
    image_speed = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="object1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collide
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,24</point>
    <point>32,24</point>
    <point>32,48</point>
    <point>0,48</point>
  </PhysicsShapePoints>
</object>
